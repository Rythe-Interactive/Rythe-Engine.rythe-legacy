#version 450
#state CULL BACK
#state BLEND OFF

generate(vertex, fragment)

#include <stdio.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = ModelToScreenSpacePosition(position);
        stdout(entityId) = stdin(entityId);
    }
}

shader(fragment)
{
    void main(void)
    {
        float r = float((stdio(entityId) >>  0ul) & 0xffff) / 65535.0;
        float g = float((stdio(entityId) >> 16ul) & 0xffff) / 65535.0;
        float b = float((stdio(entityId) >> 32ul) & 0xffff) / 65535.0;
        float a = float((stdio(entityId) >> 48ul) & 0xffff) / 65535.0;
        fragment_color = vec4(r, g, b, a);
    }
}