#version 450
#state CULL OFF
#state DEPTH_WRITE OFF

generate(vertex, fragment)

#include <stdio.shinc>
#include <utils.shinc>
#include <math_ext.shinc>

shader(vertex)
{
    uniform bool fixedSize;

    void main(void)
    {
        if(fixedSize)
        {
            gl_Position = FixedSizeBillboardModelToScreenSpacePosition(position);
        }
        else
        {
            gl_Position = BillboardModelToScreenSpacePosition(position);
        }

        // If we want lit billboards use this instead:
        PropagateStdIO((inverse(ViewProjectionMatrix) * gl_Position).xyz, (BillboardModelMatrix() * vec4(-stdin(normal), 0.0)).xyz);
        //PropagateStdIO();
    }
}

shader(fragment)
{
    void main(void)
    {
        vec4 color = vec4(vec3(1.5), clamp01(1.0 - (length(stdio(uv) - vec2(0.5)) * 3.0)));
        if(color.a == 0)
            discard;

        //fragment_depth = gl_FragCoord.z;
        // If we want lit billboards use this instead:
        //SubmitOutput(vec4(color.rgb, color.a * SoftParticleAlpha(10.0)));
        fragment_color = vec4(color.rgb, color.a * SoftParticleAlpha(100.0));
        fragment_normal = vec4(vec3(0.0), 1.0);
        fragment_position = vec4(vec3(0.0), 1.0);
        fragment_overdraw = vec4(vec3(0.0), 1.0);
    }
}
