#version 450
#state CULL OFF

generate(vertex, fragment)

#include <stdio.shinc>
#include <math_ext.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = vec4(position, 1.0);
        stdout(position) = (inverse(ViewMatrix) * vec4((inverse(ProjectionMatrix) * vec4(stdin(position), 1.0)).xyz, 0.0)).xyz;
    }
}

shader(fragment)
{
    #include <lighting_input.shinc>
    void main(void)
    {
        if(SceneDepth().r < 1.0)
            discard;

        vec3 unitDir = normalize(stdin(position));

        fragment_color = pow(SampleSkyboxLod(unitDir, 0), vec4(vec3(2.2), 1.0)) * 1.5;
        fragment_depth = 0.999;
        fragment_normal = vec4(0.0);
        fragment_position = vec4(unitDir * FarZ, 1.0);
        fragment_overdraw = vec4(0.0);
    }
}