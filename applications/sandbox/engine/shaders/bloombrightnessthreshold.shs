#version 450
#state CULL OFF
#state DEPTH OFF

generate(vertex, fragment)

#include <color_correction.shinc>
#include <stdio.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = vec4(stdin(position), 1.0);
        PropagateStdIO();
    }
}


shader(fragment)
{
    void main(void)
    {
        const float threshold = 1.0;

        //getting color from texture
        vec3 col = vec3(SceneColor(stdin(uv)));

        //check if fragment output is higher than threshold. If it is, set it as brightness color output.
        float brightness = max(col.r, max(col.g, col.b));
        if(brightness > threshold)
            fragment_overdraw = vec4(max(col.rgb - vec3(threshold), vec3(0.0)) + HDROverdraw(stdin(uv)).rgb, 1.0);
        else
            fragment_overdraw = vec4(0.0, 0.0, 0.0, 0.0);
    }
}

