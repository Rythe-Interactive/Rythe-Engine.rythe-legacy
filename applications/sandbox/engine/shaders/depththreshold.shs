#version 450
#state CULL OFF
#state DEPTH OFF
#state ALPHA OFF

generate(vertex, fragment)

variant(auto_focus)
{
    #define AUTO_FOCUS
}

#include <math_ext.shinc>
#include <stdio.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = vec4(stdin(position), 1.0);
        PropagateStdIO();
    }
}

shader(fragment)
{
    uniform float sampleOffset;
    uniform float focalOffset;
    uniform float focalRange;
    uniform float bokehRadius;

    void main(void)
    {
        //Gets depth data of current texel.
        float depthColor = LinearDepth(SceneDepth().r);
        
        #if defined(AUTO_FOCUS)
        //Calculates the amount of offset from the center texel.
        const vec2 centerTexture = vec2(0.5);
        const vec2 texelSize = 1.0 / ScreenResolution();
        const vec2 centerOffset = texelSize * sampleOffset;
        //Actually gets the offset texels.
        const vec2 offsetTexels[4] = vec2[]
        (vec2(-centerOffset.x + centerTexture.x, centerTexture.y),
        vec2(centerTexture.x, centerTexture.y + centerOffset.y),
        vec2(centerTexture.x + centerOffset.x, centerTexture.y),
        vec2(centerTexture.x, -centerOffset.y + centerTexture.y));
        //Calculates the average depth of all of those.
        const float focusDepth = focalOffset + 
                (WorldToViewSpacePostion(ScenePosition(centerTexture)).z +
                WorldToViewSpacePostion(ScenePosition(offsetTexels[0])).z +
                WorldToViewSpacePostion(ScenePosition(offsetTexels[1])).z +
                WorldToViewSpacePostion(ScenePosition(offsetTexels[2])).z +
                 WorldToViewSpacePostion(ScenePosition(offsetTexels[3])).z) * 0.2;
        #else
        const float focusDepth = focalOffset;
        #endif
        //Calculates the actual depth.
        float actualOffset = mix(NearZ, FarZ, clamp01(focusDepth/FarZ));
        //Now calculates the value of the area of focus at that texel position.
        float areaOfFocus = ((depthColor - focusDepth) / focalRange) / actualOffset;
        areaOfFocus = clamp(areaOfFocus, -1, 1) * bokehRadius;
        //Assigns the output color.
        fragment_color = vec4(vec3(areaOfFocus), 1.0);
    }
}

